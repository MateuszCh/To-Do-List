/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */@import url("https://fonts.googleapis.com/css?family=Nosifer");@import url("https://fonts.googleapis.com/css?family=Work+Sans:500");html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}template,[hidden]{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}pre,code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}h1{font-size:2em;margin:.75em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}svg:not(:root){overflow:hidden}figure{margin:1.5em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,optgroup,select,textarea{font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:0.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;white-space:normal;color:inherit;padding:0}optgroup{font-weight:bold}textarea{overflow:auto}@-webkit-keyframes powiekszenie{0%{opacity:0}100%{opacity:1}}@keyframes powiekszenie{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes schowaj{0%{opacity:1}100%{opacity:0}}@keyframes schowaj{0%{opacity:1}100%{opacity:0}}.show{-webkit-animation-name:powiekszenie;animation-name:powiekszenie;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-timing-function:cubic-bezier(0.5, 0.2, 0.3, 1);animation-timing-function:cubic-bezier(0.5, 0.2, 0.3, 1)}.hide{-webkit-animation-name:schowaj;animation-name:schowaj;-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-timing-function:cubic-bezier(0.5, 0.2, 0.3, 1);animation-timing-function:cubic-bezier(0.5, 0.2, 0.3, 1)}*{box-sizing:border-box}body{background-color:#fffaf5}input:focus,input:active,input:active,input:focus:active,button:focus,button:active,button:focus:active,textarea:focus,textarea:active,textarea:focus:active{outline:none}header{width:100%;background-color:#E74D1E;color:#fffaf5;border-bottom-right-radius:5px;border-bottom-left-radius:5px;text-align:center}h1{margin:0;font-family:'Nosifer', cursive;padding:10px 0}footer{background-color:#E74D1E;color:#fffaf5;border-top-left-radius:5px;border-top-right-radius:5px;display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;padding:10px}footer p{margin:0;padding:10px;font-family:'Work Sans', sans-serif}footer button{position:fixed;right:10px;bottom:10px;width:40px;background-color:#E74D1E;font-size:2rem;border-radius:50%;height:40px;border:1px solid white;color:#fffaf5;cursor:pointer;box-shadow:0 0 1px 1px white}.tasks{list-style:none;margin:0;padding:10px 10px}.tasks li{padding:20px;margin:10px 0;border-radius:4px;border:3px solid #ec714c;font-family:'Work Sans', sans-serif;color:#E74D1E;box-shadow:1px 1px 2px 1px #E74D1E}.list{min-height:calc(100vh - 135px)}.addForm{display:none;position:fixed;top:0;width:100%;height:100vh;background-color:#be3c14;z-index:1000;font-family:'Work Sans', sans-serif;color:#fffaf5}.addForm form{width:100%;margin:0 auto;margin-top:50px}.addForm form .pyk{display:-webkit-box;display:flex}.addForm form .pyk div{flex-basis:50%;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.addForm form .pyk div label,.addForm form .pyk div input{border:none}.addForm form input[type="text"]{width:100%;border:none}.addForm form textarea{width:100%;resize:none;height:300px;border:none}.addForm form fieldset{margin:0;padding:0;border:none}.addForm form input[type="submit"]{margin-top:200px;padding:30px;border:none;width:100%;background-color:#ec714c}.addForm form input[type="submit"]:hover{background-color:#902d0f}.close{color:#ec714c;position:absolute;right:5px;top:5px}.close:hover{color:white}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
